- name: Set fact glusterfs nodes list
  set_fact:
    glusterfs_nodes: "{{ ansible_play_hosts }}"
  run_once: True
  when: glusterfs_nodes is undefined
# - include: centos.yml
# - include: secure.yml

# - name: "Ensure the glusterd service is running"
#   service: >
#     name=glusterd
#     state=started
#     enabled=yes
#     runlevel=5
#   tags:
#     - glusterfs

# - debug:
#     msg: "System {{ groups.glusterfs }} "
# - name: Display all variables/facts known for a host
#   debug:
#     var: hostvars
#     verbosity: 4

- name: Overwite ect file
  template: src="hosts.j2" dest=/etc/hosts

- name: Configure glusterfs peers
  shell: gluster peer probe {{ item }}
  register: glusterfs_peer_probe
  changed_when: "'already in peer list' not in glusterfs_peer_probe.stdout"
  delegate_to: "{{ glusterfs_nodes[0] }}"
  run_once: True
  with_items: "{{ glusterfs_nodes }}"
  when: >
    item != glusterfs_nodes[0]
      


# - name: "Create brick directory"
#   file: >
#     path=/export/{{ item }}/brick
#     state=directory
#   with_items: gluster_volumes
#   tags:
#     - glusterfs

# - name: "Create replicated gluster volume"
#   gluster_volume: >
#     state=present
#     name={{ item }}
#     brick=/export/{{ item }}/brick
#     replicas="{{ groups[glusterfs_cluster_name]|length }}"
#     host={{ ansible_ssh_host }}
#     cluster="{% for host in groups[glusterfs_cluster_name] %}{{ hostvars[host]['ansible_ssh_host'] }}{% if not loop.last %},{% endif %}{% endfor %}"
#     force=yes
#     start_on_create=yes
#   when: inventory_hostname == "{{ groups[glusterfs_cluster_name]|first }}"
#   with_items: gluster_volumes
#   tags:
#     - glusterfs
